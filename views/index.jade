!!! html
html
  head
    title f7u12rl
    style
      body { 
        font-family: Garamond, Georgia, serif;
        font-style: bold;
        font-size: 28px;
      }
      input { font-size: 20px; }
      #wrapper { margin-top: 1em; }
      #srcLink {
        float: left;
        margin-left: 0.5em;
        margin-right: 0.5em;
        margin-top: 1.7em;
        margin-bottom: 2.5em;
        font-size: 14px;
      }
      #redditLink { float: left; margin-top: 0.5em }
      #label { 
        clear: both;
        margin-left: 0.05em; 
      }
      #enrage {
        border: 2px solid black;
        background-color: #c2c2c2;
        margin-left: 0.5em;
        padding: 2px;
      }
      #enrage:hover {
        border: 4px solid red;
        cursor: pointer;
        padding: 0px;
      }
      #msgs {
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 2em;
        clear: both;
      }
      .hidden { display: none }
      .error { color: #91100a }
      #footer {
        margin-top: 2em;
        font-size: 16px;


    script(src='http://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js')
    script
      /* Stolen from the curry module by Dominic Tarr
       * https://github.com/dominictarrr
       */
      function curry(){var c,a,d,e;for(key in arguments){var b=arguments[key];
      !a&&Array.isArray(b)?d?a=b:c=b:!d&&typeof b==="function"?d=b:e=b}
      return function(){return d.apply(e,append([].concat(c||[]),arguments)
      .concat(a||[]))}}function append(c,a){for(i in a)c.push(a[i]);return c};
    script
      /* Modernizr 2.0.6 (Custom Build) | MIT & BSD
       * http://www.modernizr.com/
       * Contains: history
       */
      ;window.Modernizr=function(a,b,c){function w(a,b){return!!~(""+a).indexOf(
      b)}function v(a,b){return typeof a===b}function u(a,b){return t(
      prefixes.join(a+";")+(b||""))}function t(a){j.cssText=a}var d="2.0.6",e={}
      ,f=b.documentElement,g=b.head||b.getElementsByTagName("head")[0],h=
      "modernizr",i=b.createElement(h),j=i.style,k,l=Object.prototype.toString,
      m={},n={},o={},p=[],q,r={}.hasOwnProperty,s;!v(r,c)&&!v(r.call,c)?s=
      function(a,b){return r.call(a,b)}:s=function(a,b){return b in a&&v(a
      .constructor.prototype[b],c)},m.history=function(){return!!a.history&&
      !!history.pushState};for(var x in m)s(m,x)&&(q=x.toLowerCase(),e[q]=m[x]()
      ,p.push((e[q]?"":"no-")+q));t(""),i=k=null,e._version=d;return e}(this,
      this.document);
    script

      var startSwap = function (imgUrl) {
        var sequence = newImageSequence();
        $('#image').slideUp(200, function() {
          swapImage(imgUrl, sequence);
        })
        checkStatus(imgUrl, sequence);
      }
 
      var oops = function (xhr, textStatus) {
        clearTimeout(loadingTickTID);
        $('#msgs').empty();
        $('#msgs').append('<span class="error">SERVER SAYS: ' +
                          xhr.responseText.replace(/_/g, ' ') + '</span>');
        $('#msgs').append('<br>You must enter the URL of the image ' +
                          '(it should end in .jpg or .png)');
        $('#msgs').removeClass('hidden');
      }

      var huzzah = function (origImgUrl, sequence, resp) {
        if (sequence.imageSwapped) {
          sequence.callback(origImgUrl, resp);
        } else {
          sequence.callback = curry([origImgUrl, resp], sequence.callback)
        }
      }

      var checkStatus = function (imgUrl, sequence) {
        $('#msgs').empty();
        $('#msgs').append('Enraging...');
        loadingTickTID = setTimeout(function(){loadingTick()}, 1000);
        $('#msgs').removeClass('hidden');
        $.ajax({ url:  '/status/'
               , data:     {src: imgUrl}
               , error:    oops
               , success:  curry([imgUrl, sequence], huzzah)
               })
      }
      var loadingTick = function () {
        $('#msgs').append('.');
        loadingTickTID = setTimeout(function(){loadingTick()}, 1000);
      }
      var loadingTickTID;

      var swapImage = function (imgUrl, sequence) {
        $('#img').attr('src', '/?src=' + imgUrl);
        $('#srcInput').attr('placeholder', imgUrl);
        $('#srcLink a').attr('href', imgUrl);
        sequence.imageSwapped = true;
        sequence.callback();
      }

      var revealImage = function (origImgUrl, resp) {
        // this if statement triggers when swapImage fires before huzzah
        // we bail because huzzah will call us again with our arguments
        if (origImgUrl === undefined && resp === undefined) return;
        
        clearTimeout(loadingTickTID);
        if (resp === 'No faces found') {
          $('#img').attr('src', origImgUrl);
        } 
        $('#msgs').addClass('hidden');
        $('#image').slideDown(200);
      }

      var newImageSequence = function () {
        return {callback: revealImage};
      }
      
      $(document).ready(function () {
        if (Modernizr.history) {
          // setup history pop listener to restore previous photo
          window.addEventListener('popstate', function (e) {
            if (document.location.pathname.length > 1) {
              var imgUrl = window.atob(document.location.pathname.replace('/',
                                                                          ''));
              startSwap(imgUrl); 
            } else {
              if (window.history.length > 1) {
                var imgUrl = 'http://www.librarising.com/astrology/celebs/' +
                             'images2/QR/queenelizabethii.jpg';
                if ($('#img').attr('src') !== '/?src=' + imgUrl) {
                  startSwap(imgUrl);
                }
              }
            }
          })
        }
      
        $('form').submit(function (e) {
          var imgUrl = $('#srcInput').val();
          var sequence = newImageSequence();
          $('#image').slideUp(200, function() {
            //$('#img').attr('src', '/?src=' + imgUrl);
            swapImage(imgUrl, sequence);
            if (Modernizr.history) {
              history.pushState({haveMoved: true}, 
                                '', 
                                '/' + window.btoa(imgUrl));
            }
          })
          checkStatus(imgUrl, sequence);
          e.preventDefault();
          return false;
        })
      })
      
  body
    #image
      img#img(src='/?src=#{image}')
      #link
        #redditLink
          a(href="http://www.reddit.com/submit", onclick="window.location = 'http://www.reddit.com/submit?url=' + encodeURIComponent(window.location); return false") 
            img(src="http://www.reddit.com/static/spreddit7.gif", alt="submit to reddit", border="0")
        #srcLink
          a(href=image) 
            | view original
    #wrapper
      #msgs
      #label FFFFFFFUUUUUUUUUUURL:
      form(action='/')
        input#srcInput(type='text', name='src', size=60, placeholder=image)
        input#enrage(type='submit', value='&nbsp;ENRAGE&nbsp;')
      #footer
        | Made by <a href="http://github.com/aperiodic">Dan Lidral-Porter</a>
        | using <a href="http://nodejs.org">node.js</a> and
        | <a href="http://face.com">face.com</a>.
